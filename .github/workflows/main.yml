name: Django-app workflow

on: [push]

jobs:
  tests:
    name: Runs flake8 checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements/common.txt
    - name: Test with flake8 & isort
      run: |
        python -m flake8
        python -m isort


  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/master'
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        - name: Push to Docker Hub Backend
          uses: docker/build-push-action@v2 
          with:
            push: true
            context: ./backend
            tags: ${{ secrets.DOCKER_HUB_USERNAME }}/foodgram_back:latest
        - name: Push to Docker Hub Frontend
          uses: docker/build-push-action@v2 
          with:
            push: true
            context: ./frontend
            tags: ${{ secrets.DOCKER_HUB_USERNAME }}/foodgram_front:latest

  deploy:
      name: Deploy image on remote server
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
      steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.YC_HOST }}
          username: ${{ secrets.YC_USER }}
          key: ${{ secrets.YC_SSH_KEY }}
          passphrase: ${{ secrets.YC_SSH_PASSPHRASE }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/foodgram_back:latest
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/foodgram_front:latest
            sudo docker-compose stop
            sudo docker-compose rm web
            sudo docker-compose rm frontend
            rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d 


  send_message:
    name: Send worflow run status to Telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.USER_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
